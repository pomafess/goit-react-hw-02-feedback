{"version":3,"sources":["components/statistic/Statistics.module.css","components/feedback/FeedbackOptions.module.css","components/section/Section.module.css","components/notification/Notification.module.css","components/feedbackStatistic/FeedbackStatistic.module.css","components/feedback/FeedbackOptions.jsx","components/section/Section.jsx","components/statistic/Statistics.jsx","components/notification/Notification.jsx","components/feedbackStatistic/FeedbackStatistic.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","buttonElements","map","item","className","styles","feedback","onClick","type","Section","title","children","Statistics","props","total","positivePercentage","Object","keys","stat","toUpperCase","slice","statNumber","Notification","message","notification","FeedbackStatistic","state","good","bad","neutral","handleIncreament","name","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","toFixed","wrapper","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,qBCAzBD,EAAOC,QAAU,CAAC,SAAW,oC,gBCA7BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,qC,qKC0BbC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAiBF,EAAQG,KAAI,SAAAC,GAAI,OACjC,wBACEC,UAAWC,IAAOC,SAClBC,QAAS,kBAAIP,EAAgBG,IAC7BK,KAAK,SAHP,SAMGL,GAFIA,MAKb,OACE,mCACGF,K,gBCCQQ,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIP,UAAWC,IAAOK,MAAtB,SAA8BA,IAC7BC,M,gBCiBQC,EArBI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAClC,OACE,qCACGC,OAAOC,KAAKJ,GAAOX,KAAI,SAAAC,GAAI,OAC1B,oBAAGC,UAAWC,IAAOa,KAArB,UACGf,EAAK,GAAGgB,cAAgBhB,EAAKiB,MAAM,GADtC,KAEE,sBAAMhB,UAAWC,IAAOgB,WAAxB,SAAqCR,EAAMV,OAFbA,MAKlC,oBAAGC,UAAWC,IAAOa,KAArB,oBAAmCJ,OACnC,oBAAGV,UAAWC,IAAOa,KAArB,gCAA+CH,IAA/C,W,iBCHSO,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGnB,UAAWC,IAAOmB,aAArB,SAAoCD,K,iBCoD9BE,E,4MA/CbC,MAAQ,CACNC,KAAM,EACNC,IAAK,EACLC,QAAS,G,EAEXC,iBAAmB,SAAAC,GACjB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAG9BG,mBAAqB,WAGnB,OAFmBlB,OAAOmB,OAAO,EAAKT,OACbU,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAG/DC,gCAAkC,WAChC,OAAK,EAAKL,sBAGD,EAAKR,MAAMC,KAAO,EAAKO,qBAAwB,KAAKM,UAFpD,G,4CAKX,WACE,OACE,sBAAKpC,UAAWC,IAAOoC,QAAvB,UACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASiB,OAAOC,KAAKyB,KAAKhB,OAC1B1B,gBAAiB0C,KAAKZ,qBAG1B,cAAC,EAAD,CAASpB,MAAM,aAAf,SACGgC,KAAKR,qBACJ,cAAC,EAAD,CACErB,MAAO6B,KAAKhB,MACZZ,MAAO4B,KAAKR,mBACZnB,mBAAoB2B,KAAKH,kCAG3B,cAAC,EAAD,CAAchB,QAAQ,+B,GAxCFoB,aCFjBC,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34876b06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"Statistics_stat__kId93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__2Jj3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3OqYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__cvVQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackStatistic_wrapper__1UkMF\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttonElements = options.map(item => (\r\n        <button\r\n          className={styles.feedback}\r\n          onClick={()=>onLeaveFeedback(item)}\r\n          type=\"button\"\r\n          key={item}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))\r\n  return (\r\n    <>\r\n      {buttonElements}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Section.module.css\"\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({ props, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(props).map(item => (\r\n        <p className={styles.stat} key={item}>\r\n          {item[0].toUpperCase() + item.slice(1)} :\r\n          <span className={styles.statNumber}>{props[item]}</span>\r\n        </p>\r\n      ))}\r\n      <p className={styles.stat}>Total: {total()}</p>\r\n      <p className={styles.stat}>Positive feedback: {positivePercentage()}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  props: PropTypes.object.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Notification.module.css\"\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from '../feedback/FeedbackOptions';\r\nimport Section from '../section/Section';\r\nimport Statistics from '../statistic/Statistics';\r\nimport Notification from '../notification/Notification';\r\n\r\nimport styles from \"./FeedbackStatistic.module.css\"\r\n\r\n\r\nclass FeedbackStatistic extends Component {\r\n  state = {\r\n    good: 0,\r\n    bad: 0,\r\n    neutral: 0,\r\n  };\r\n  handleIncreament = name => {\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const arrayValue = Object.values(this.state);\r\n    const total = arrayValue.reduce((acc, value) => acc + value, 0);\r\n    return total\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    if (!this.countTotalFeedback()) {\r\n      return 0\r\n    }\r\n    return ((this.state.good / this.countTotalFeedback()) * 100).toFixed();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleIncreament}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              props={this.state}\r\n              total={this.countTotalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackStatistic;\r\n","import React from 'react';\r\nimport FeedbackStatistic from './components/feedbackStatistic';\r\n\r\nconst App = () => {\r\n  return <FeedbackStatistic />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}